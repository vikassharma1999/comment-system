{"ast":null,"code":"var _jsxFileName = \"/home/vicky/Desktop/intern/comment_system/backend/client/src/components/list-comments.component.js\";\nimport React, { Component } from 'react';\nimport cogoToast from 'cogo-toast';\nimport moment from 'moment';\nimport axios from 'axios';\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.upvotes = React.createRef();\n    this.downvotes = React.createRef();\n    this.handleUpvoteDownvote = this.handleUpvoteDownvote.bind(this);\n    this.state = {\n      upvoted: false,\n      downvoted: false,\n      publisher: ''\n    };\n  }\n\n  componentDidMount() {\n    //query redis to determine user comments upvote downvote status to set state - could be optimized\n    const jwt = sessionStorage.getItem(\"jwt-token\");\n\n    if (jwt === null) {\n      console.log('not logged in');\n    } else {\n      const headers = {\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"auth-header\": jwt\n        }\n      };\n      axios.post('http://localhost:5000/api/cache/updownstate', {\n        'commentid': this.props.comment._id\n      }, headers).then(resp => {\n        this.setState(resp.data);\n      }).catch(err => console.log(err));\n    }\n  }\n\n  handleUpvoteDownvote(e) {\n    console.log(e.target.name);\n    console.log(this.props);\n    const json = {\n      type: e.target.name\n    };\n    json.data = this.props;\n    console.log(json);\n    const jwt = sessionStorage.getItem(\"jwt-token\");\n\n    if (jwt === null) {\n      const {\n        hide\n      } = cogoToast.warn('Click to login & upvote/downvote.', {\n        onClick: () => {\n          hide();\n          window.location = '/login';\n        }\n      });\n    } else {\n      console.log(this.state.publisher);\n\n      if (this.state.publisher == json.data.comment.user._id) {\n        cogoToast.error(`You cant ${e.target.name} your own comment!`, {\n          hideAfter: 5\n        });\n      } else {\n        if (e.target.name === \"upvote\") {\n          if (this.state.downvoted) {\n            json.data.comment.downvotes--;\n            this.setState({\n              downvoted: false\n            });\n          }\n\n          json.data.comment.upvotes++;\n          this.setState({\n            upvoted: true\n          });\n        } else {\n          if (this.state.upvoted) {\n            json.data.comment.upvotes--;\n            this.setState({\n              upvoted: false\n            });\n          }\n\n          json.data.comment.downvotes++;\n          this.setState({\n            downvoted: true\n          });\n        }\n\n        this.props.socket.send(JSON.stringify(json));\n        const headers = {\n          headers: {\n            \"Accept\": \"application/json\",\n            \"Content-type\": \"application/json\",\n            \"auth-header\": jwt\n          }\n        }; // sync with mongo\n\n        axios.put('http://localhost:5000/api/comments/update', json.data.comment, headers).then(res => {\n          console.log(res); //sync wtih redis\n\n          axios.put('http://localhost:5000/api/cache/updownstate', {\n            'commentid': json.data.comment._id,\n            upvoted: this.state.upvoted ? 1 : 0\n          }, headers).then(resp => this.setState(resp.data)).catch(err => console.log(err));\n        }).catch(err => console.log(err));\n      }\n    }\n  }\n\n  render() {\n    let likeimgurl = this.state.upvoted ? process.env.PUBLIC_URL + '/logos/liked.png' : process.env.PUBLIC_URL + '/logos/like.png';\n    let dislikeimgurl = this.state.downvoted ? process.env.PUBLIC_URL + '/logos/disliked.png' : process.env.PUBLIC_URL + '/logos/dislike.png';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-10 px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-block px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title text-dark\",\n      style: {\n        marginTop: '10px',\n        'fontWeight': 'bolder'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, this.props.comment.user.firstName, \" \", this.props.comment.user.lastName), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      style: {\n        fontSize: '16px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, this.props.comment.content), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-muted\",\n      style: {\n        fontSize: '13px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + '/logos/clock.png',\n      style: {\n        width: '13px',\n        height: '13px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 70\n      }\n    }), \"\\xA0\\xA0\", moment(Date.parse(this.props.comment.createdAt)).fromNow()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-2 px-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      disabled: this.state.upvoted,\n      onClick: this.handleUpvoteDownvote,\n      name: \"upvote\",\n      src: likeimgurl,\n      alt: \"upvote\",\n      width: \"30\",\n      height: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      ref: this.upvotes,\n      style: {\n        fontSize: '16px',\n        'fontWeight': 'bolder',\n        'verticalAlign': '6px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 179\n      }\n    }, \"\\xA0\\xA0\\xA0\", this.props.comment.upvotes), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \" \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"image\",\n      disabled: this.state.downvoted,\n      onClick: this.handleUpvoteDownvote,\n      name: \"downvote\",\n      src: dislikeimgurl,\n      alt: \"downvote\",\n      width: \"30\",\n      height: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      ref: this.downvotes,\n      style: {\n        fontSize: '16px',\n        'fontWeight': 'bolder',\n        'verticalAlign': '6px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 188\n      }\n    }, \"\\xA0\\xA0\\xA0\", this.props.comment.downvotes), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 344\n      }\n    }))))));\n  }\n\n}\n\nexport default class ListComments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:5000/api/comments/').then(resp => this.setState({\n      comments: resp.data\n    })).catch(err => console.log(err));\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const data = JSON.parse(nextProps.comment);\n    console.log(data.data);\n\n    if (data.type === \"upvote\" || data.type === \"downvote\") {\n      let cloneComments = [...this.state.comments];\n      const foundIndex = cloneComments.findIndex(x => x._id == data.data.comment._id);\n      console.log(foundIndex);\n      cloneComments[foundIndex] = data.data.comment;\n      this.setState({\n        comments: cloneComments\n      });\n    } else if (data.type === \"comment\") {\n      this.setState({\n        comments: [data.data, ...this.state.comments]\n      });\n    }\n  }\n\n  commentList() {\n    return this.state.comments.map(currentcomment => {\n      return /*#__PURE__*/React.createElement(Comment, {\n        comment: currentcomment,\n        socket: this.props.actions,\n        key: currentcomment._id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }\n    }, \"Comments\"), this.commentList());\n  }\n\n}","map":{"version":3,"sources":["/home/vicky/Desktop/intern/comment_system/backend/client/src/components/list-comments.component.js"],"names":["React","Component","cogoToast","moment","axios","Comment","constructor","props","upvotes","createRef","downvotes","handleUpvoteDownvote","bind","state","upvoted","downvoted","publisher","componentDidMount","jwt","sessionStorage","getItem","console","log","headers","post","comment","_id","then","resp","setState","data","catch","err","e","target","name","json","type","hide","warn","onClick","window","location","user","error","hideAfter","socket","send","JSON","stringify","put","res","render","likeimgurl","process","env","PUBLIC_URL","dislikeimgurl","marginTop","firstName","lastName","fontSize","content","width","height","Date","parse","createdAt","fromNow","ListComments","comments","get","componentWillReceiveProps","nextProps","cloneComments","foundIndex","findIndex","x","commentList","map","currentcomment","actions"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cogoToast from 'cogo-toast';\nimport moment from 'moment';\nimport axios from 'axios';\n\nclass Comment extends Component {\n\n    constructor(props){\n      super(props);\n      this.upvotes = React.createRef();\n      this.downvotes = React.createRef();\n      this.handleUpvoteDownvote = this.handleUpvoteDownvote.bind(this);\n      this.state = {\n        upvoted : false,\n        downvoted : false,\n        publisher : ''\n      }\n\n    }\n    componentDidMount(){\n      //query redis to determine user comments upvote downvote status to set state - could be optimized\n      const jwt = sessionStorage.getItem(\"jwt-token\");\n      if(jwt === null){\n        console.log('not logged in');\n      }\n      else{\n        const headers = { headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"auth-header\": jwt,\n          }\n        }\n        axios.post('http://localhost:5000/api/cache/updownstate', {'commentid' : this.props.comment._id }, headers)\n          .then(resp =>{ this.setState(resp.data)})\n          .catch(err => console.log(err));  \n        }\n    \n    }\n\n    handleUpvoteDownvote(e){\n      console.log(e.target.name);\n      console.log(this.props);\n      const json = { type: e.target.name };\n      json.data = this.props;\n      console.log(json);\n      const jwt = sessionStorage.getItem(\"jwt-token\");\n      if(jwt === null){\n       const { hide } = cogoToast.warn('Click to login & upvote/downvote.', {\n        onClick: () => {\n          hide();\n          window.location = '/login';\n        },\n      });\n      }\n      else {\n        console.log(this.state.publisher);\n        \n        if(this.state.publisher == json.data.comment.user._id){\n          cogoToast.error(`You cant ${e.target.name} your own comment!`, { hideAfter : 5 })\n        }\n        else {\n        if(e.target.name === \"upvote\"){\n          if(this.state.downvoted){\n            json.data.comment.downvotes--;\n            this.setState({downvoted : false});\n          }\n          json.data.comment.upvotes++;\n          this.setState({upvoted : true});  \n        }\n        else {\n          if(this.state.upvoted){\n            json.data.comment.upvotes--;\n            this.setState({upvoted : false});\n          }\n          json.data.comment.downvotes++;\n          this.setState({downvoted : true});     \n        }\n        this.props.socket.send(JSON.stringify(json));\n        const headers = { headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"auth-header\": jwt,\n          }\n        }\n        // sync with mongo\n        axios.put('http://localhost:5000/api/comments/update', json.data.comment, headers)\n          .then(res => { \n            console.log(res);\n            //sync wtih redis\n            axios.put('http://localhost:5000/api/cache/updownstate', {'commentid' : json.data.comment._id, upvoted : (this.state.upvoted ? 1 : 0) }, headers)\n            .then(resp => this.setState(resp.data))\n            .catch(err => console.log(err));  \n            \n          })\n          .catch(err => console.log(err));\n        }\n      }\n    }\n\n    render() {\n      let likeimgurl = this.state.upvoted ? process.env.PUBLIC_URL + '/logos/liked.png' : process.env.PUBLIC_URL + '/logos/like.png';\n      let dislikeimgurl = this.state.downvoted ? process.env.PUBLIC_URL + '/logos/disliked.png' : process.env.PUBLIC_URL + '/logos/dislike.png';\n      \n      return (\n        <div className=\"card\">\n          <div className=\"row\">\n            <div className=\"col-md-10 px-3\">\n              <div className=\"card-block px-3\">\n                <h5 className=\"card-title text-dark\" style={{marginTop: '10px', 'fontWeight':'bolder'}}>{this.props.comment.user.firstName} {this.props.comment.user.lastName}</h5>\n                <p className=\"card-text\" style={{fontSize: '16px'}}>{this.props.comment.content }</p>\n                <p className=\"text-muted\" style={{fontSize: '13px'}}><img src={process.env.PUBLIC_URL + '/logos/clock.png'} style={{width: '13px', height: '13px'}} />&nbsp;&nbsp;{moment(Date.parse(this.props.comment.createdAt)).fromNow()}</p>\n              </div>\n            </div>\n            <div className=\"col-md-2 px-3\">\n              <div>\n                <br/>\n                <div> <input type=\"image\" disabled={this.state.upvoted} onClick={this.handleUpvoteDownvote} name=\"upvote\" src={likeimgurl}  alt=\"upvote\" width=\"30\" height=\"30\" /><span ref={this.upvotes} style={{fontSize: '16px', 'fontWeight': 'bolder', 'verticalAlign':'6px'}}>&nbsp;&nbsp;&nbsp;{this.props.comment.upvotes}</span> </div>\n                <div> <input type=\"image\" disabled={this.state.downvoted} onClick={this.handleUpvoteDownvote} name=\"downvote\" src={dislikeimgurl}  alt=\"downvote\" width=\"30\" height=\"30\" /><span ref={this.downvotes} style={{fontSize: '16px', 'fontWeight': 'bolder', 'verticalAlign':'6px'}}>&nbsp;&nbsp;&nbsp;{this.props.comment.downvotes}</span><br/></div>   \n              </div>\n            </div>\n          </div>\n        </div>\n    )\n\n    }\n   \n}\n\nexport default class ListComments extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = { comments: [] }\n  }\n\n  componentDidMount(){\n    axios.get('http://localhost:5000/api/comments/')\n      .then(resp => this.setState({ comments : resp.data }))\n      .catch(err => console.log(err));\n  }\n\n  componentWillReceiveProps(nextProps){\n    \n    const data = JSON.parse(nextProps.comment);\n    console.log(data.data);\n    if(data.type === \"upvote\" || data.type === \"downvote\"){\n      let cloneComments = [...this.state.comments]\n      const foundIndex = cloneComments.findIndex(x => x._id == data.data.comment._id );\n      console.log(foundIndex)\n      cloneComments[foundIndex] = data.data.comment\n\n      this.setState({ comments : cloneComments });\n    }\n    else if(data.type === \"comment\"){\n      this.setState({ comments : [data.data, ...this.state.comments] })\n    }\n  } \n\n  commentList() {  \n    return this.state.comments.map(currentcomment => {\n      return <Comment comment={currentcomment} socket={this.props.actions} key={currentcomment._id}/>;\n    })\n  }\n  render() {\n    return (\n      <div className=\"d-flex flex-column\">\n      <h3>Comments</h3>\n        { this.commentList() }\n     </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}