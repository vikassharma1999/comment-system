{"ast":null,"code":"var _jsxFileName = \"/home/vicky/Desktop/intern/comment_system/backend/client/src/components/add-comment.component.js\";\nimport React, { Component } from 'react';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\nexport default class AddComment extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeContent = this.onChangeContent.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      content: '',\n      upvotes: 0,\n      downvotes: 0\n    };\n  }\n\n  onChangeContent(e) {\n    this.setState({\n      content: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const comment = {\n      content: this.state.content\n    };\n    const jwt = sessionStorage.getItem(\"jwt-token\");\n\n    if (jwt === null) {\n      console.log('not logged in');\n      const {\n        hide\n      } = cogoToast.warn('Click to login & comment', {\n        onClick: () => {\n          hide();\n          window.location = '/login';\n        }\n      });\n    } else {\n      const headers = {\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\",\n          \"auth-header\": jwt\n        }\n      };\n      axios.post('http://localhost:5000/api/comments/add', comment, headers).then(res => {\n        const json = {\n          type: 'comment'\n        };\n        json.data = res.data;\n        console.log(json);\n        this.props.actions.send(JSON.stringify(json));\n        this.setState({\n          content: ''\n        });\n      }).catch(err => cogoToast.error('Failed adding comment, please try again!', {\n        hideAfter: 5\n      }).then(() => this.setState({\n        content: ''\n      })));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, \"Add a Comment\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"5\",\n      required: true,\n      className: \"form-control\",\n      value: this.state.content,\n      placeholder: \"Type a comment\",\n      onChange: this.onChangeContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      value: \"Post Comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/vicky/Desktop/intern/comment_system/backend/client/src/components/add-comment.component.js"],"names":["React","Component","cogoToast","axios","AddComment","constructor","props","onChangeContent","bind","onSubmit","state","content","upvotes","downvotes","e","setState","target","value","preventDefault","comment","jwt","sessionStorage","getItem","console","log","hide","warn","onClick","window","location","headers","post","then","res","json","type","data","actions","send","JSON","stringify","catch","err","error","hideAfter","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport cogoToast from 'cogo-toast';\nimport axios from 'axios';\n\nexport default class AddComment extends Component {\n\n  constructor(props){\n    super(props);\n   \n    this.onChangeContent = this.onChangeContent.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n        content: '',\n        upvotes: 0,\n        downvotes: 0\n    }\n  }\n  \n  onChangeContent(e){\n      this.setState({\n          content : e.target.value\n      });\n  }\n\n   onSubmit(e){\n     e.preventDefault();\n     const comment = {\n         content : this.state.content,\n     }\n      const jwt = sessionStorage.getItem(\"jwt-token\");\n      if(jwt === null){\n        console.log('not logged in');\n        const { hide } = cogoToast.warn('Click to login & comment', {\n          onClick: () => {\n            hide();\n            window.location = '/login';\n          },\n        });\n      }\n      else {\n      const headers = { headers: {\n        \"Accept\": \"application/json\",\n        \"Content-type\": \"application/json\",\n        \"auth-header\": jwt,\n        }\n      }\n      axios.post('http://localhost:5000/api/comments/add', comment, headers)\n        .then(res => { \n          const json = { type: 'comment' };\n          json.data = res.data;\n          console.log(json);\n          this.props.actions.send(JSON.stringify(json));\n          this.setState({content : ''})\n          \n        })\n        .catch(err => cogoToast.error('Failed adding comment, please try again!', { hideAfter : 5 })\n        .then(() => this.setState({content : ''})));\n      }\n    }\n   \n  render() {\n    return (\n      <div>\n      <h3>Add a Comment</h3>\n      <form onSubmit={this.onSubmit} >\n          <div className=\"form-group\">\n            <textarea rows=\"5\"\n                required\n                className=\"form-control\"\n                value={this.state.content}\n                placeholder=\"Type a comment\"\n                onChange={this.onChangeContent}>\n            </textarea>\n          </div>\n          <div className=\"form-group\" align=\"right\">\n            <input type=\"submit\"\n                className=\"btn btn-dark\"\n                value=\"Post Comment\">\n            </input>\n          </div>\n      </form>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}